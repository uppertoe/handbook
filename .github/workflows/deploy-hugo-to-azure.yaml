name: Build and Deploy Hugo to Azure WebApp

on:
  push:
    branches:
      - main  # Change to your default branch if different
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  id-token: write

concurrency:
  group: "deploy-azure-webapp"
  cancel-in-progress: false

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0  # Specify your desired Hugo version
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Node.js Dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://your-site-url/"  # Replace with your actual base URL

      - name: Zip Public Folder
        run: |
          zip -r deploy.zip public/  # Zips the 'public/' folder itself

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: ./deploy.zip

  # Deploy Job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy
          path: ./deploy.zip

      - name: Extract Publish Profile Credentials
        id: extract_publish_profile
        run: |
          echo "${{ secrets.AZURE_PUBLISH_PROFILE }}" > publishProfile.xml

      - name: Parse Publish Profile for Kudu Credentials
        id: parse_publish_profile
        run: |
          USERNAME=$(xmllint --xpath "string(//publishProfile[@publishMethod='MSDeploy']/userName)" publishProfile.xml)
          PASSWORD=$(xmllint --xpath "string(//publishProfile[@publishMethod='MSDeploy']/userPWD)" publishProfile.xml)
          KUDU_API_URL="https://${{ secrets.AZURE_APP_NAME }}.scm.azurewebsites.net/api/vfs/site/wwwroot/public/"

          echo "KUDU_API_URL=${KUDU_API_URL}" >> $GITHUB_OUTPUT
          echo "USERNAME=${USERNAME}" >> $GITHUB_OUTPUT
          echo "PASSWORD=${PASSWORD}" >> $GITHUB_OUTPUT

      - name: Delete Existing Public Folder Contents
        run: |
          echo "Deleting existing 'public/' folder contents..."
          curl -X DELETE -u "${{ steps.parse_publish_profile.outputs.USERNAME }}:${{ steps.parse_publish_profile.outputs.PASSWORD }}" "${{ steps.parse_publish_profile.outputs.KUDU_API_URL }}" -H "Content-Type: application/json"
          echo "Existing 'public/' folder contents deleted."

      - name: Deploy New Public Folder
        run: |
          echo "Uploading new 'public/' folder..."
          curl -X PUT -u "${{ steps.parse_publish_profile.outputs.USERNAME }}:${{ steps.parse_publish_profile.outputs.PASSWORD }}" \
            -H "Content-Type: application/zip" \
            --data-binary @deploy.zip \
            "${{ steps.parse_publish_profile.outputs.KUDU_API_URL }}"
          echo "New 'public/' folder deployed successfully."

      - name: Cleanup
        run: |
          rm publishProfile.xml deploy.zip
