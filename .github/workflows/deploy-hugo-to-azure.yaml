name: Build and Deploy Hugo to Azure WebApp

on:
  push:
    branches:
      - main  # Change to your default branch if different
  workflow_dispatch:

permissions:
  contents: read
  actions: write
  id-token: write

concurrency:
  group: "deploy-azure-webapp"
  cancel-in-progress: false

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0  # Specify your desired Hugo version
    steps:
      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Node.js Dependencies
        run: |
          [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"  # Updated baseURL

      - name: Zip Public Folder
        run: |
          zip -r deploy.zip public/  # Zips the 'public/' folder itself

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: ./deploy.zip

  # Deploy Job
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy
          path: ./deploy.zip

      - name: Delete Existing Public Folder Contents
        env:
          AZURE_KUDU_USERNAME: ${{ secrets.AZURE_KUDU_USERNAME }}
          AZURE_KUDU_PASSWORD: ${{ secrets.AZURE_KUDU_PASSWORD }}
          AZURE_APP_NAME: ${{ secrets.AZURE_APP_NAME }}
        run: |
          echo "Deleting existing 'public/' folder contents..."
          curl -X DELETE -u "${AZURE_KUDU_USERNAME}:${AZURE_KUDU_PASSWORD}" "https://${AZURE_APP_NAME}.scm.azurewebsites.net/api/vfs/site/wwwroot/public/" -H "Content-Type: application/json"
          echo "Existing 'public/' folder contents deleted."

      - name: Deploy New Public Folder
        env:
          AZURE_KUDU_USERNAME: ${{ secrets.AZURE_KUDU_USERNAME }}
          AZURE_KUDU_PASSWORD: ${{ secrets.AZURE_KUDU_PASSWORD }}
          AZURE_APP_NAME: ${{ secrets.AZURE_APP_NAME }}
        run: |
          echo "Uploading new 'public/' folder..."
          curl -X PUT -u "${AZURE_KUDU_USERNAME}:${AZURE_KUDU_PASSWORD}" \
            -H "Content-Type: application/zip" \
            --data-binary @deploy.zip \
            "https://${AZURE_APP_NAME}.scm.azurewebsites.net/api/vfs/site/wwwroot/public/deploy.zip"
          echo "New 'public/' folder deployed successfully."

      - name: Cleanup
        run: |
          rm deploy.zip
